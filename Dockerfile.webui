FROM python:3.10-slim AS builder

WORKDIR /build

# Install only the build dependencies
RUN apt-get update && apt-get install -y \
    python3-dev \
    build-essential \
    git \
    --no-install-recommends \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first to leverage Docker cache
COPY requirements.txt .

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install dependencies in a single layer
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -q git+https://github.com/hexgrad/kokoro.git && \
    pip install --no-cache-dir -q misaki[ja] misaki[zh]

# Second stage - runtime image
FROM python:3.10-slim

WORKDIR /app

# Copy only runtime dependencies from builder stage
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install only the runtime dependencies
RUN apt-get update && apt-get install -y \
    libsndfile1 \
    espeak-ng \
    --no-install-recommends \
    && rm -rf /var/lib/apt/lists/*

# Copy application files
COPY app.py kokoro_tts.py example.txt ./
COPY templates/ templates/
COPY static/ static/

# Create directories
RUN mkdir -p input output

# Create non-root user for security
RUN groupadd -r -g 1000 appgroup && \
    useradd -r -u 1000 -g appgroup -M appuser && \
    chown -R appuser:appgroup /app

USER appuser

# Expose port
EXPOSE 5001

# Run the application
CMD ["python", "app.py"]